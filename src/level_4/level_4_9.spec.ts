import simpleTest from '../additional/simpleTest';
import { daysUntilNextFebruary29, findCommonDivisors, findMaxInSubArrays, getMaslenitsaDate } from './level_4_9';

describe('Уровень 4.9', () => {
  describe('4.9.1. Сделайте функцию, которая будет возвращать сколько дней осталось до ближайшего 29 февраля.', () => {
    const testCases = [
      {
        input: new Date('2023-10-05'), // Текущая дата в октябре 2023 года
        expected: 147, // До 29 февраля 2024 года
      },
      {
        input: new Date('2024-02-27'), // 28 февраля 2024 года (високосный год)
        expected: 2, // До 29 февраля 2024 года
      },
      {
        input: new Date('2024-02-29'), // 29 февраля 2024 года
        expected: 0,
      },
      {
        input: new Date('2032-02-29'), // 29 февраля 2032 года (високосный год)
        expected: 0, // До 29 февраля 2036 года
      },
      {
        input: new Date('2036-03-01'), //
        expected: 1460, // До 29 февраля 2040 года
      },
      {
        input: new Date('2100-01-01'),
        expected: 1519,
      },
    ];

    simpleTest(testCases, daysUntilNextFebruary29);
  });

  describe('4.9.2. Сделайте функцию, которая будет возвращать дату следующей масленицы, которая празднуется в последнее воскресенье зимы.', () => {
    const testCases = [
      {
        input: 2025,
        expected: '02.03.2025',
      },
      {
        input: 2024,
        expected: '17.03.2024',
      },
      {
        input: 2020,
        expected: '01.03.2020',
      },
      {
        input: 2040,
        expected: '18.03.2040',
      },
    ];

    simpleTest(testCases, getMaslenitsaDate);
  });

  describe('4.9.4. Сделайте функцию, которая параметром будет принимать массив чисел и возвращать массив общих делителей всех чисел из переданного массива.', () => {
    const testCases = [
      {
        input: [12, 18, 24],
        expected: [1, 2, 3, 6], // Общие делители чисел 12, 18 и 24
      },
      {
        input: [7, 14, 21],
        expected: [1, 7], // Общие делители чисел 7, 14 и 21
      },
      {
        input: [5, 10, 15, 20],
        expected: [1, 5], // Общие делители чисел 5, 10, 15 и 20
      },
      {
        input: [13, 17, 19],
        expected: [1], // Общие делители чисел 13, 17 и 19
      },
      {
        input: [36, 60, 72],
        expected: [1, 2, 3, 4, 6, 12], // Общие делители чисел 36, 60 и 72
      },
    ];

    simpleTest(testCases, findCommonDivisors);
  });

  describe('4.9.5. Сделайте функцию, которая параметром будет принимать двухмерный массив чисел и возвращать массив максимальных чисел в каждом подмассиве.', () => {
    const testCases = [
      {
        input: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
        expected: [3, 6, 9], // Максимальные числа в каждом подмассиве
      },
      {
        input: [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]],
        expected: [-1, -4, -7], // Максимальные числа в каждом подмассиве
      },
      {
        input: [[10, 20, 30], [5, 15, 25], [0, 10, 20]],
        expected: [30, 25, 20], // Максимальные числа в каждом подмассиве
      },
      {
        input: [[7], [12], [3]],
        expected: [7, 12, 3], // Максимальные числа в каждом подмассиве
      },
      {
        input: [[1, 1, 1], [2, 2, 2], [3, 3, 3]],
        expected: [1, 2, 3], // Максимальные числа в каждом подмассиве
      },
    ];
    

    simpleTest(testCases, findMaxInSubArrays);
  });
});
